<?xml version="1.0" encoding="utf-8"?>
<!--
     Copyright (C) 2023 The Linux Foundation
     SPDX-License-Identifier: BSD-3-Clause
-->
<resources>

    <!--
    Controls the mapping between RSSI and RSSI levels.

    RSSI                                    RSSI Level
    (-infinity, thresholds[0])                       0
    [threshold[0], threshold[1])                     1
    [threshold[1], threshold[2])                     2
    ...                                            ...
    [threshold[len-2], threshold[len-1])         len-1
    [threshold[len-1], +infinity)                  len

    where:
        [a, b) is the range of integers `n` such that a <= n < b
        `threshold[i]` represents the i'th element of the config_wifiRssiLevelThresholds array
        and `len` is the length of the config_wifiRssiLevelThresholds array.
    -->
    <integer-array name="config_wifiRssiLevelThresholds">
        <item>-93</item>
        <item>-82</item>
        <item>-71</item>
        <item>-65</item>
    </integer-array>

    <!-- boolean indicating whether the WiFi chipset has 5GHz band support.
         Note: This config is replacing the config_wifi_dual_band_support
         since more bands may now be supported (such as 6GHz), the naming dual_band
         is no longer indicative, and a separate config now exists for each band -->
    <bool name="config_wifi5ghzSupport">true</bool>

    <!-- Enable Aware NDP interface selection on interface that already has network set up.
     Note: the default AOSP Android does not support multiple networks on the same Aware NDI.
     Enabling this configuration will restore legacy behavior but may result in incorrect behavior.
     -->
    <bool name="config_wifiAllowMultipleNetworksOnSameAwareNdi">true</bool>

    <!-- Wifi driver supports 6GHz band for softap when chip support 6GHz -->
    <bool name="config_wifiSoftap6ghzSupported">true</bool>

    <!-- Wifi driver Automatic channel selection (ACS) for softap to include DFS channels -->
    <bool name="config_wifiSoftapAcsIncludeDfs">true</bool>

    <!-- Boolean indicating whether the wifi chipset supports background scanning mechanism.
         This mechanism allows the host to remain in suspend state and the dongle to actively
         scan and wake the host when a configured SSID is detected by the dongle. This chipset
         capability can provide power savings when wifi needs to be always kept on. -->
    <bool name="config_wifi_background_scan_support">true</bool>

    <!-- Indicates that connected MAC randomization is supported on this device -->
    <bool name="config_wifi_connected_mac_randomization_supported">true</bool>

    <!-- Boolean indicating that only configurations that have the same pre-shared key will be linked -->
    <bool name="config_wifi_only_link_same_credential_configurations">false</bool>

    <!-- Indicates that p2p MAC randomization is supported on this device -->
    <bool name="config_wifi_p2p_mac_randomization_supported">true</bool>

    <!-- Wifi driver supports Automatic channel selection (ACS) for softap -->
    <bool name="config_wifi_softap_acs_supported">true</bool>

    <!-- Wifi driver supports IEEE80211AC for softap -->
    <bool name="config_wifi_softap_ieee80211ac_supported">true</bool>

    <!-- Wifi driver supports WPA3 Simultaneous Authentication of Equals (WPA3-SAE) for softap -->
    <bool name="config_wifi_softap_sae_supported">true</bool>

    <!-- integer indicating additional disconnect delay (in ms) after IMS onLost() indication is received -->
    <integer name="config_wifiDelayDisconnectOnImsLostMs">1000</integer>

    <!-- Integer indicating maximum hardware supported client number of soft ap -->
    <integer name="config_wifiHardwareSoftapMaxClientCount">32</integer>

    <!-- Wifi driver supports Opportunistic Wireless Encryption (OWE) Transition
         aka Enhanced Open for Soft-AP -->
    <bool translatable="false" name="config_wifiSoftapOweTransitionSupported">true</bool>

    <!-- Wifi driver supports Opportunistic Wireless Encryption (OWE)
         aka Enhanced Open for Soft-AP -->
    <bool translatable="false" name="config_wifiSoftapOweSupported">true</bool>

    <!-- List of allowed channels in 2GHz band for softap. If the device doesn't want to restrict
         channels this should be empty. Values is a comma separated channel string and/or channel
         range string like '1-6,11'. -->
    <string name="config_wifiSoftap2gChannelList" translatable="false" />

    <!-- List of allowed channels in 5GHz band for softap. If the device doesn't want to restrict
         channels this should be empty. Values is a comma separated channel string and/or channel
         range string like '36-48,149'. -->
    <string name="config_wifiSoftap5gChannelList" translatable="false" />

    <!-- List of allowed channels in 6GHz band for softap. If the device doesn't want to restrict
         channels this should be empty. Values is a comma separated channel string and/or channel
         range string like '36-48,149'. -->
    <string name="config_wifiSoftap6gChannelList" translatable="false" />

    <!-- Indicates whether or not the WLAN driver supports the NL80211_CMD_REG_CHANGE or
         NL80211_CMD_WIPHY_REG_CHANGE events which indicate the current country code which is
         being used by the WLAN driver. If the driver doesn't support these events
         (configuration is `false`) then the driver must handle the setCountryCode request from
         HAL as a blocking call. In such a case the country code will be applied
         immediately after the country code is sent to the driver (if the method returns a
         success). -->
    <bool translatable="false" name="config_wifiDriverSupportedNl80211RegChangedEvent">true</bool>

    <!-- Integer threshold for max number of WifiConfigurations that can be saved on the device.
        A value of -1 indicates no limit. If a max number is specified, then under-used configs
        will be deleted to make room for new configs.-->
    <integer translatable="false" name="config_wifiMaxNumWifiConfigurations">1000</integer>

    <!-- Lists each alternate character set per locale language for SSID translation to UTF-8. This
         will translate all SSIDs encoded with the specified character set from the native layer
         into UTF-8 SSIDs. The translated SSIDs are then converted back to the original character
         set when passed back to the native layer. This effectively switches all non-UTF-8 APs into
         UTF-8 APs from the perspective of the framework and apps, and is intended to provide
         backwards compatibility with apps that only work with UTF-8 SSIDs. Values must be in the
         form of the locale language and canonical java.nio Charset name, separated by a comma. If
         the locale language is "all", then the character set will apply to all locale languages
         that do not specify their own character set. -->
    <string-array translatable="false" name="config_wifiCharsetsForSsidTranslation">
        <item>zh,GBK</item>
    </string-array>

</resources>
